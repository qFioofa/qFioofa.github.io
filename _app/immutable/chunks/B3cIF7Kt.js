class r{constructor(t,i=8,e={}){this.camera=t,this.radius=i,this.targetRotationX=0,this.targetRotationY=0,this.currentRotationX=0,this.currentRotationY=0,this.isMouseOver=!1,this.container=null,this.horizontalFOV=e.horizontalFOV||100,this.verticalFOV=e.verticalFOV||75,this.sensitivity=e.sensitivity||1,this.maxHorizontalRotation=this.horizontalFOV*Math.PI/180,this.maxVerticalRotation=this.verticalFOV*Math.PI/180,this.onMouseMove=this.onMouseMove.bind(this),this.onMouseEnter=this.onMouseEnter.bind(this),this.onMouseLeave=this.onMouseLeave.bind(this)}getCamera(){return this.camera}onMouseMove(t){if(!this.container)return;const i=this.container.getBoundingClientRect(),e=i.left+i.width/2,s=i.top+i.height/2,o=(t.clientX-e)/(i.width/2),n=(t.clientY-s)/(i.height/2);this.targetRotationY=-o*(this.maxHorizontalRotation/2),this.targetRotationX=n*(this.maxVerticalRotation/2)}onMouseEnter(t){this.isMouseOver=!0}onMouseLeave(){this.isMouseOver=!1}attach(t){this.container=t,document.addEventListener("mousemove",this.onMouseMove,{passive:!0}),document.addEventListener("mouseenter",this.onMouseEnter,{passive:!0}),document.addEventListener("mouseleave",this.onMouseLeave,{passive:!0})}detach(t){t&&(t.removeEventListener("mousemove",this.onMouseMove),t.removeEventListener("mouseenter",this.onMouseEnter),t.removeEventListener("mouseleave",this.onMouseLeave)),this.container=null}update(){this.currentRotationX+=(this.targetRotationX-this.currentRotationX)*.05,this.currentRotationY+=(this.targetRotationY-this.currentRotationY)*.05,this.camera.position.x=this.radius*Math.sin(this.currentRotationY),this.camera.position.z=this.radius*Math.cos(this.currentRotationY),this.camera.position.y=this.radius*Math.sin(this.currentRotationX),this.camera.lookAt(0,0,0)}reset(){this.targetRotationX=0,this.targetRotationY=0,this.currentRotationX=0,this.currentRotationY=0}updateSettings(t){t.horizontalFOV!==void 0&&(this.horizontalFOV=t.horizontalFOV,this.maxHorizontalRotation=this.horizontalFOV*Math.PI/180),t.verticalFOV!==void 0&&(this.verticalFOV=t.verticalFOV,this.maxVerticalRotation=this.verticalFOV*Math.PI/180),t.sensitivity!==void 0&&(this.sensitivity=t.sensitivity)}getSettings(){return{horizontalFOV:this.horizontalFOV,verticalFOV:this.verticalFOV,sensitivity:this.sensitivity}}}export{r as C};
